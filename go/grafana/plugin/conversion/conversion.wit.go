// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package conversion represents the world "grafana:plugin/conversion@0.0.1".
package conversion

import (
	"github.com/bytecodealliance/wasm-tools-go/cm"
)

// GroupVersionKind represents the record "grafana:plugin/conversion@0.0.1#group-version-kind".
//
// Identify the Object properties
//
//	record group-version-kind {
//		group: string,
//		version: string,
//		kind: string,
//	}
type GroupVersionKind struct {
	_       cm.HostLayout
	Group   string
	Version string
	Kind    string
}

// GroupVersion represents the record "grafana:plugin/conversion@0.0.1#group-version".
//
// GroupVersion represents the API group and version of a resource.
//
//	record group-version {
//		group: string,
//		version: string,
//	}
type GroupVersion struct {
	_       cm.HostLayout
	Group   string
	Version string
}

// RawObject represents the record "grafana:plugin/conversion@0.0.1#raw-object".
//
// RawObject contains a resource serialized into a byte array with a content type
//
//	record raw-object {
//		raw: list<u8>,
//		content-type: string,
//	}
type RawObject struct {
	_ cm.HostLayout
	// Raw is the serialized object
	Raw cm.List[uint8]

	// ContentType is the media type of the raw object
	ContentType string
}

// ConversionRequest represents the record "grafana:plugin/conversion@0.0.1#conversion-request".
//
// ConversionRequest supports converting objects from one version to another
//
//	record conversion-request {
//		uid: string,
//		objects: list<raw-object>,
//		target-version: option<group-version>,
//	}
type ConversionRequest struct {
	_ cm.HostLayout
	// uid is an identifier for the individual request/response. It allows distinguishing
	// instances of requests which are
	// otherwise identical (parallel requests, etc).
	// The UID is meant to track the round trip (request/response) between the Kubernetes
	// API server and the webhook, not the user request.
	// It is suitable for correlating log entries between the webhook and apiserver, for
	// either auditing or debugging.
	UID string

	// Objects to convert
	// +listType=atomic
	Objects cm.List[RawObject]

	// Target converted version
	TargetVersion cm.Option[GroupVersion]
}

// StatusResult represents the record "grafana:plugin/conversion@0.0.1#status-result".
//
// Status structure is copied from:
// <https://github.com/kubernetes/apimachinery/blob/v0.30.1/pkg/apis/meta/v1/generated.proto#L979>
//
//	record status-result {
//		status: string,
//		message: string,
//		reason: string,
//		code: s32,
//	}
type StatusResult struct {
	_ cm.HostLayout
	// Status of the operation.
	// One of: "Success" or "Failure".
	// More info: <https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status>
	// +optional
	Status string

	// A human-readable description of the status of this operation.
	// +optional
	Message string

	// A machine-readable description of why this operation is in the
	// "Failure" status. If this value is empty there
	// is no information available. A Reason clarifies an HTTP status
	// code but does not override it.
	// +optional
	Reason string

	// Suggested HTTP return code for this status, 0 if not set.
	// +optional
	Code int32
}

// ConversionResponse represents the record "grafana:plugin/conversion@0.0.1#conversion-response".
//
// ConversionResponse contains the converted objects
//
//	record conversion-response {
//		uid: string,
//		status: option<status-result>,
//		objects: list<raw-object>,
//	}
type ConversionResponse struct {
	_ cm.HostLayout
	// uid is an identifier for the individual request/response.
	// This should be copied over from the corresponding `request.uid`.
	UID string

	// result contains extra details into why an admission request was denied.
	Status cm.Option[StatusResult]

	// objects is the list of converted version of `request.objects` if the `result` is
	// successful, otherwise empty.
	// +listType=atomic
	Objects cm.List[RawObject]
}
